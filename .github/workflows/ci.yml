name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv sync --all-extras

    - name: Lint with ruff
      run: |
        uv run ruff check src tests

    - name: Format check with ruff
      run: |
        uv run ruff format --check src tests

    - name: Type check with mypy
      run: |
        uv run mypy src

    - name: Test with pytest
      run: |
        uv run pytest tests/ -v --tb=short

    - name: Test CLI basic functionality
      run: |
        uv run lweval list-suites
        uv run lweval list-adapters

    - name: Test dummy adapter run
      run: |
        mkdir -p test-reports
        uv run lweval run --adapter dummy --suite harmlessness --out test-reports --seed 42

    - name: Upload test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports-py${{ matrix.python-version }}
        path: test-reports/
        retention-days: 30

  integration-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Set up Python
      run: uv python install 3.11

    - name: Install dependencies
      run: uv sync --all-extras

    - name: Run integration tests with OpenAI (if API key available)
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        if [ -n "$OPENAI_API_KEY" ]; then
          mkdir -p integration-reports
          uv run lweval run --adapter openai --suite harmlessness --out integration-reports --judge-adapter openai --model gpt-4o-mini
          echo "Integration test completed successfully"
        else
          echo "Skipping OpenAI integration test - no API key available"
        fi

    - name: Upload integration reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: integration-reports
        path: integration-reports/
        retention-days: 7